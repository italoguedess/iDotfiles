#!/usr/bin/env bash
# workspaces
# :properties:
# :header-args: :tangle scripts/workspaces :comments org :shebang #!/usr/bin/env bash
# :end:

# This script basically gives the workspace eww widget css classes as we interact with
# hyprland through hyprctl. Through the classes we can then customize the widget
# appearence dinamically.

# .__                        
# |__| ______  _  ____  _  __
# |  |/ __ \ \/ \/ /\ \/ \/ /
# |  \  ___/\     /  \     / 
# |__|\___  >\/\_/    \/\_/  
#         \/                 

#   Made by Italo Guedes (Github @italoguedess) as
#   a part of italOS (Github @italoguedess/italOS).
#   workspace script heavily based on:
#   https://github.com/saimoomedits/eww-widgets
#   https://github.com/rxyhn/tokyo

workspaces() {
ws1=1
ws2=2
ws3=3
ws4=4
ws5=5
ws6=6
ws7=7
ws8=8
ws9=9

# Unoccupied
un="0"

# check if occupied
o1=$(hyprctl workspaces -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws1")
o2=$(hyprctl workspaces -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws2")
o3=$(hyprctl workspaces -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws3")
o4=$(hyprctl workspaces -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws4")
o5=$(hyprctl workspaces -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws5")
o6=$(hyprctl workspaces -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws6")
o7=$(hyprctl workspaces -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws7")
o8=$(hyprctl workspaces -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws8")
o9=$(hyprctl workspaces -j | awk '/id/ {print $2; exit}' | cut -d',' -f1 | grep "$ws9")

# check if focused
f1=$(hyprctl activeworkspace -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws1")
f2=$(hyprctl activeworkspace -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws2")
f3=$(hyprctl activeworkspace -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws3")
f4=$(hyprctl activeworkspace -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws4")
f5=$(hyprctl activeworkspace -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws5")
f6=$(hyprctl activeworkspace -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws6")
f7=$(hyprctl activeworkspace -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws7")
f8=$(hyprctl activeworkspace -j | awk '/id/ {print $2}' | cut -d',' -f1 | grep "$ws8")
f9=$(hyprctl activeworkspace -j | awk '/id/ {print $2; exit}' | cut -d',' -f1 | grep "$ws9")

# check if urgent
# u1=$(bspc query -D -d .urgent --names | grep 1)
# u2=$(bspc query -D -d .urgent --names | grep 2)
# u3=$(bspc query -D -d .urgent --names | grep 3)
# u4=$(bspc query -D -d .urgent --names | grep 4)
# u5=$(bspc query -D -d .urgent --names | grep 5)

# icons
ic_1=""
ic_2=""
ic_3=""
ic_4=""
ic_5=""
ic_6=""
ic_7=""
ic_8=""
ic_9=""
if [ $f1 ]; then
    ic_1=""
elif [ $f2 ]; then
    ic_2=""
elif [ $f3 ]; then
    ic_3=""
elif [ $f4 ]; then
    ic_4=""
elif [ $f5 ]; then
    ic_5=""
elif [ $f6 ]; then
    ic_6=""
elif [ $f7 ]; then
    ic_7=""
elif [ $f8 ]; then
    ic_8=""
elif [ $f9 ]; then
    ic_9=""
fi

echo "(box :class 'workspaces'
	   :orientation 'h'
	   :space-evenly true
	   :halign 'start'
	   :spacing 15
      (button :class \"$un$o1$f1\" :onclick 'hyprctl dispatch workspace 1' \"$ic_1\") 
      (button :class \"$un$o2$f2\" :onclick 'hyprctl dispatch workspace 2' \"$ic_2\") 
      (button :class \"$un$o3$f3\" :onclick 'hyprctl dispatch workspace 3' \"$ic_3\") 
      (button :class \"$un$o4$f4\" :onclick 'hyprctl dispatch workspace 4' \"$ic_4\") 
      (button :class \"$un$o5$f5\" :onclick 'hyprctl dispatch workspace 5' \"$ic_5\") 
      (button :class \"$un$o6$f6\" :onclick 'hyprctl dispatch workspace 6' \"$ic_6\") 
      (button :class \"$un$o7$f7\" :onclick 'hyprctl dispatch workspace 7' \"$ic_7\") 
      (button :class \"$un$o8$f8\" :onclick 'hyprctl dispatch workspace 8' \"$ic_8\") 
      (button :class \"$un$o9$f9\" :onclick 'hyprctl dispatch workspace 9' \"$ic_9\"))"
}

workspaces
